// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model MenuItem {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  price       Int
  category    String   // New field for category
  cartItems   CartItem[]  // Relationship to CartItem
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

}


model Admin {
  id       Int      @id @default(autoincrement())
  username String   @unique
  password String   // This will store the hashed password
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Session {
  id             String    @id @default(uuid())
  userId         Int?
  cartItems      CartItem[] 
  isAuthenticated Boolean   @default(false)
  createdAt      DateTime  @default(now())
  expiresAt      DateTime
}

model CartItem {
  id          String    @id @default(uuid())
  sessionId   String
  menuItemId  Int 
  quantity    Int
  session     Session   @relation(fields: [sessionId], references: [id])
  menuItem    MenuItem  @relation(fields: [menuItemId], references: [id])
}
model Order {
  id            String     @id @default(uuid())
  sessionId     String
  createdAt     DateTime   @default(now())
  status        String     @default("pending") // E.g., pending, completed, canceled
  totalPrice    Float
  cartItems     String       // Store as JSON to simplify structure
  // Additional fields as needed for more details
}